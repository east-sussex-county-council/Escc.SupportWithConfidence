@model Escc.SupportWithConfidence.Admin.Models.ProviderViewModel
@using ClientDependency.Core.Mvc
@using Escc.ClientDependencyFramework
@{
    Model.Metadata.Title = "Support with Confidence";
    Html.RequiresCss(CssFileAlias.Resolve("FormsSmall"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsMedium"), MediaQueryAlias.Resolve("Medium"));
    Html.RequiresCss(CssFileAlias.Resolve("FormsLarge"), MediaQueryAlias.Resolve("Large"));
    Html.RequiresCss("~/css/support.css");
}
<div class="full-page">
    <div class="content text-content">
        <h1>@Model.Provider.ProviderName</h1>
        <div class="form service-form">

            @{ Html.BeginForm(); }
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(string.Empty, new { @class = "validationSummary" })
            <div class="photo">
                @if (Model.Provider.ImageUrl != null)
                {
                    <img src="@Model.Provider.ImageUrl.AbsoluteUri" alt="" />
                    <div>
                        <label><input type="checkbox" name="RemovePhoto" id="RemovePhoto" /> Remove photo</label>
                    </div>
                }
                else
                {
                    <img src="@Url.Content("~/images/silhouette.jpg")" alt="No photo for provider" />

                    <div class="uploadphoto">
                        <label for="Provider.Photo">Upload photo:</label>
                        <input type="file" name="Provider.Photo" id="Provider.Photo" />
                    </div>
                }
            </div>

            <h2>Contact details</h2>

            <div class="vcard">
                @if (Model.Provider.PublishAddress)
                {
                    <p>
                        @if (Model.Provider.ContactName.Length > 0)
                        {
                            <span class="n">@Model.Provider.ContactName</span><br />
                        }
                        else
                        {
                            <span class="org">@Model.Provider.ProviderName</span><br />
                        }
                        <span class="location adr">
                            @if (Model.Provider.Address.Paon.Length > 4)
                            {
                                <span class="street-address">
                                    @Model.Provider.Address.Paon @Model.Provider.Address.Saon<br />
                                    @Model.Provider.Address.StreetName
                                </span><br />
                            }
                            else
                            {
                                <span class="street-address">
                                    @Model.Provider.Address.Paon @Model.Provider.Address.Saon
                                    @Model.Provider.Address.StreetName
                                </span><br />
                            }

                            <span class="locality">@Model.Provider.Address.Town</span><br />
                            @if (Model.Provider.Address.Locality.Length > 0)
                            {
                                <span class="region">@Model.Provider.Address.Locality</span><br />
                            }
                            <span class="postal-code">@Model.Provider.Address.Postcode</span>
                        </span>
                    </p>
                }
                else
                {
                    <p>
                        @if (Model.Provider.ContactName.Length > 0)
                        {
                            <span class="n">@Model.Provider.ContactName</span><br />
                        }
                        else
                        {
                            <span class="org">@Model.Provider.ProviderName</span><br />
                        }
                    </p>
                }
                <p>
                    @if (Model.Provider.Telephone.Trim().Length > 0)
                    {
                        <span class="tel"><span class="aural"><span class="type"></span> </span>Phone: <span class="value">@Model.Provider.Telephone</span></span>
                    }
                    @if (Model.Provider.Mobile.Trim().Length > 0)
                    {
                        <br />
                        <span class="tel"><span class="aural"><span class="type"></span> </span>Mobile: <span class="value">@Model.Provider.Mobile</span></span>
                    }

                    @if (Model.Provider.Email.Trim().Length > 0)
                    {
                        <br />
                        @:Email: <a class="email" href="mailto:@Model.Provider.Email">@Model.Provider.Email</a><br />
                    }

                    @if (Model.Provider.Website.Trim().Length > 0)
                    {
                        @:Website: <a class="url" href="@Model.Provider.Website">@Model.Provider.Website</a>
                    }
                </p>
            </div>

            @if (Model.Provider.Coverage.Trim().Length > 0 & Model.Provider.Coverage2.Trim().Length > 0)
            {
                <h2>Coverage</h2>
                <p>@Model.Provider.Coverage @Model.Provider.Coverage2</p>
            }
            else
            {
                if (Model.Provider.Coverage.Trim().Length > 0)
                {
                    <h2>Coverage</h2>
                    <p>@Model.Provider.Coverage</p>
                }
            }

            @if (Model.Provider.Availability.Trim().Length > 0)
            {
                <h2>Availability</h2>
                <p>@Model.Provider.Availability</p>
            }

            <h2>Category listings</h2>
            <ul>@Html.Raw(Model.Provider.CategoryList)</ul>

            @if (Model.Provider.CrbCheckDate.Trim().Length > 0)
            {
                <h2>Date of last Criminal Records check</h2>
                <p>@Model.Provider.CrbCheckDate</p>
            }

            @if (Model.Provider.CqcCheckDate.Trim().Length > 0)
            {
                <h2>Date of Care Quality Commission (CQC) Registration</h2>
                <p>@Model.Provider.CqcCheckDate</p>
            }

            @if (Model.Provider.BwcMember)
            {
                <img src="@Url.Content("~/images/bwc_logo.jpg")" alt="Buy with Confidence Member" />
            }

            <h2>Editable bits</h2>
            @Html.HiddenFor(p => p.Provider.FlareId)
            <div class="formBox">
                <div class="formPart">
                    @{ Model.Provider.Experience = Model.Provider.Experience.Replace("<br />", Environment.NewLine); }
                    @Html.LabelFor(p => p.Provider.Experience)
                    @Html.TextAreaFor(p => p.Provider.Experience)
                </div>

                <div class="formPart">
                    @{ Model.Provider.Background = Model.Provider.Background.Replace("<br />", Environment.NewLine); }
                    @Html.LabelFor(p => p.Provider.Background)
                    @Html.TextAreaFor(p => p.Provider.Background)
                </div>

                <div class="formPart">
                    @{ Model.Provider.Expertise = Model.Provider.Expertise.Replace("<br />", Environment.NewLine); }
                    @Html.LabelFor(p => p.Provider.Expertise)
                    @Html.TextAreaFor(p => p.Provider.Expertise)
                </div>

                <fieldset>
                    <legend>Accreditations</legend>
                    <span class="radioButtonList">
                    @foreach (var accreditation in Model.Accreditations)
                    {
                        var accreditationApplies = (Model.Provider.Accreditations.FirstOrDefault(providerAccreditation => providerAccreditation.AccreditationId == accreditation.AccreditationId) != null);
                        <input type="checkbox" value="@accreditation.AccreditationId" @(accreditationApplies ? " checked=\"checked\"" : string.Empty) name="Provider.Accreditations.AccreditationId" id="accreditation-@accreditation.AccreditationId" />
                        <label for="accreditation-@accreditation.AccreditationId">@accreditation.Name</label>
                    }
                    </span>
                </fieldset>

                <div class="formPart">
                    @{ Model.Provider.Services = Model.Provider.Services.Replace("<br />", Environment.NewLine); }
                    @Html.LabelFor(p => p.Provider.Services)
                    @Html.TextAreaFor(p => p.Provider.Services)
                </div>

                <div class="formPart">
                    @{ Model.Provider.Costs = Model.Provider.Costs.Replace("<br />", Environment.NewLine); }
                    @Html.LabelFor(p => p.Provider.Costs)
                    @Html.TextAreaFor(p => p.Provider.Costs)
                </div>

                <div class="formPart">
                    @{ Model.Provider.Crb = Model.Provider.Crb.Replace("<br />", Environment.NewLine); }
                    @Html.LabelFor(p => p.Provider.Crb, "Criminal records information")
                    @Html.TextAreaFor(p => p.Provider.Crb)
                </div>

                <div class="radioButtonList checkbox">
                    @Html.LabelFor(p => p.Provider.PublishToWeb, "Publish on website")
                    @Html.CheckBoxFor(p => p.Provider.PublishToWeb)
                </div>
            </div>


            <div class="formButtons">
                <input type="submit" value="Save" />
            </div>
        </div>
        @{ Html.EndForm(); }

        <p><a href="@Url.Content("~/providers.aspx")">Manage providers</a></p>
    </div>
</div>